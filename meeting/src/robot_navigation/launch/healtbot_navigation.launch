<launch>
  <!-- Arguments -->
  <!-- <arg name="map_file" default="$(find robot_navigation)/maps/map.yaml"/> -->
  <arg name="open_rviz" default="true"/>
  <arg name="simulation" default="true"/>
  <arg name="with_camera" default="true"/>
  <arg name="localization" default="false"/>
  <arg name="database_path" default="~/.ros/rtabmap.db"/>
  <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>

  <!-- Turtlebot3 -->
  <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher" args="0 0 0 -1.5708 0 -1.5708 camera_link kinect2_link 100" />

  <group if="$(arg simulation)">
    <include file="$(find robot_base)/launch/healthbot.launch">
  </include>
  </group>

  <group unless="$(arg simulation)">
    <include file="$(find robot_base)/launch/robot.launch"/>
  </group>

    <!-- Kinect cloud to laser scan -->
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
      <remap from="image"       to="/kinect2/sd/image_depth"/>
      <remap from="camera_info" to="/kinect2/sd/camera_info"/>
      <remap from="scan"        to="/kinect_scan"/>
      <param name="range_max" type="double" value="4"/>
    </node>


  <group ns="rtabmap">
    <node pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync" output="screen">
      <remap from="rgb/image"         to="/kinect2/qhd/image_color_rect"/>
      <remap from="depth/image"         to="/kinect2/qhd/image_depth_rect"/>
      <remap from="rgb/camera_info"   to="/kinect2/qhd/camera_info"/>
    </node>

    <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="frame_id"            type="string" value="base_footprint"/>
      <param name="subscribe_rgb"   type="bool" value="false"/>
      <param name="subscribe_depth" type="bool" value="false"/>
      <param name="subscribe_rgbd" type="bool" value="true"/>
      <param name="subscribe_scan"      type="bool"   value="true"/>
      <param name="approx_sync"         type="bool"   value="true"/>

      <!-- use actionlib to send goals to move_base -->
      <param name="use_action_for_goal" type="bool" value="true"/>
      <remap from="move_base"            to="/move_base"/>

      <!-- inputs -->
      <remap from="scan"            to="/scan"/>
      <remap from="odom"            to="/odom"/>
      <remap from="rgbd_image"       to="rgbd_image"/>

      <!-- output -->
      <remap from="grid_map" to="/map"/>

      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy"                 type="string" value="1"/>
      <param name="Reg/Force3DoF"                type="string" value="true"/>
      <param name="GridGlobal/MinSize"           type="string" value="20"/>

      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
    </node>

    <!-- visualization with rtabmap_viz -->
    <node pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_scan"   type="bool"   value="true"/>
      <param name="subscribe_odom"   type="bool"   value="true"/>
      <param name="frame_id"         type="string" value="base_footprint"/>
      <param name="approx_sync"      type="bool"   value="true"/>

      <remap from="odom"            to="/odom"/>
      <remap from="scan"            to="/kinect_scan"/>
    </node>
  </group>

  <!-- Map server -->
  <!-- <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/> -->

  <!-- AMCL -->
  <!-- <include file="$(find robot_navigation)/launch/amcl.launch"/> -->

  <!-- move_base -->
  <include file="$(find robot_navigation)/launch/move_base.launch">
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find robot_navigation)/rviz/healthbot_navigation.rviz"/>
  </group>
</launch>