<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />
    <arg name="world_name" value="$(find robot_base)/worlds/cool.world"/>
  <param name="robot_description" textfile="$(find robot_base)/urdf/robot_base.urdf" />
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  
  <!-- <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="0 0 0 0 0 0 map base_footprint 40" /> -->
    
  <!-- <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_footprint base_link 40" />  -->



  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find robot_base)/urdf/robot_base.urdf -urdf -model robot_base" output="screen" />
  <node name="spawn_building" pkg="gazebo_ros" type="spawn_model" args="-file /home/ubuntu/model_editor_models/FloorPlan/model.sdf -sdf -model building" output="screen" />
  <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" />

  <!-- <node pkg="robot_odom" type="robot_odom" name="odometry_publisher" output="screen" /> -->

  <!-- <node pkg="robot_frames" type="static_transforms.py" name="static_transforms" output="screen" /> -->



  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_base)/rviz_config.rviz" />
</launch>
